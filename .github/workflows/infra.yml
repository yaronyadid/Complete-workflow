name: Infra CI

on:
  # push:
  #   branches:
  #     - master
  #   paths:
  #     - 'terraform/**'
  workflow_dispatch:    

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_LOG: DEBUG
      TF_LOG_PATH: ./terraform.log  

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # - name: Terraform Plan (detect drift)
      #   working-directory: ./terraform
      #   run: terraform plan -detailed-exitcode

      # - name: Terraform Apply (auto-approve)
      #   if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      #   working-directory: ./terraform
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #   run: terraform apply -auto-approve -input=false -var "aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" -var "aws_region=${{ secrets.AWS_REGION }}"
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -detailed-exitcode -var "aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" -var "aws_region=${{ secrets.AWS_REGION }}" -input=false

      - name: Terraform Apply
        working-directory: ./terraform
        #terraform taint aws_instance.app_server || true , add this if you want to force recreate the instance 
        run: terraform apply -auto-approve -var "aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" -var "aws_region=${{ secrets.AWS_REGION }}" -input=false